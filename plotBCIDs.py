##
# @author Mariana Rihl (mariana.rihl AT cern.ch)
#
#
import matplotlib as mpl
#mpl.use('Agg')
#mpl.use('Agg')
mpl.interactive(True)
import numpy as np
from numpy import random,histogram,arange,sqrt,exp,nonzero
np.set_printoptions(threshold='nan') # print whole array, not just first and last 3 entries
import scipy as sp
#import pylab as P
import matplotlib.pyplot as plt
import matplotlib.dates as md
import matplotlib.cm as cm
from matplotlib.dates import *
from scipy import optimize
#from mytools import *
#from classData import *
#from classDeconvolution import *
#import classResolution as res
import sys
import bz2, gc, marshal, gzip
from time import clock
try:
    import cPickle as pickle
except:
    import pickle

LHCbuckets5568=[741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

bcids = [0]*3654

bcidnumber = []
for bcid in LHCbuckets5568:
	bcidnumber.append((bcid+9)/10)

for bunch in range(len(bcids)):
	if bunch+1 in bcidnumber:
		bcids[bunch] = 1

fig = plt.figure(figsize=(12,5.5), facecolor = 'white')
ax = fig.add_subplot(111)

ax.plot(range(len(bcids))
		,bcids
		,color = 'green'
		,linestyle = '-'
		)

	
		      