#!/usr/bin/env python
# inspired from velo2-assembly.py
# Author: Karol Hennessy - karol.hennessy@cern.ch
# Author: Massimiliano Ferro-Luzzi
# changes by Mariana Rihl
# Last edited: 27 November 2016

from Gaudi.Configuration  import *
from GaudiPython.Bindings import AppMgr
from GaudiPython.Bindings import gbl
from Configurables        import LHCbApp
from Configurables       import PrepareVeloFullRawBuffer
from Configurables       import DecodeVeloFullRawBuffer
from Configurables       import createODIN
#from Configurables       import nzsStreamListener
#from Configurables       import LbAppInit
#from Configurables       import Vetra
#from Configurables       import (CondDB, CondDBAccessSvc)
import GaudiPython
from ROOT                 import * #TH2F, TCanvas, TFile, TH1F, TColor
import sys
from math import sqrt
import pickle
#from collections import defaultdict
import gzip

##############################
import matplotlib as mpl
#mpl.use('Agg')
#mpl.use('Qt4Agg')
mpl.interactive(True)
import matplotlib.pyplot as plt
import numpy as np
np.set_printoptions(threshold='nan') # print whole array, not just first and last 3 entries
import scipy as sp
from numpy import *
import string
import math, os, sys
#from mytools import *
#     from funcs import *
#from defs import *
#import copy
##############################

#from Configurables       import DataOnDemandSvc
#from DAQSys.DecoderClass import Decoder
#from DAQSys.Decoders     import DecoderDB as ddb
from Configurables import CondDB
CondDB().IgnoreHeartBeat = True
CondDB().EnableRunStampCheck = False

lhcb = LHCbApp()

nevts                  = 1000000000
print 'Starting bgv_raw.py....'
if len(sys.argv)<2 :
   print 'You must provide the run number [and optionally num_events num_TAE]: python BGV_pulseshape.py 1571 [1000 2]' 
   sys.exit(-1)
for i in range(0,len(sys.argv)):
   print 'sys.argv[',i,'] = ',sys.argv[i]
if len(sys.argv)>2 : 
   nevts = int(sys.argv[2])
runnumber              = sys.argv[1]
print 'Will process at most ',nevts,' events from run number ', runnumber

# default: TAE = 0, no next and no prev
firstsampleprev = 3
lastsamplenext = 3
if len(sys.argv)>3:
   TAE = int(sys.argv[3])
   if TAE in [1,2,3]:
      firstsampleprev = 3-TAE
      lastsamplenext  = 3+TAE
   else:
      print 'cannot handle such TAE... I use TAE = 0'

#                0               1               2               3                 4               5               6
fullloc      = [ 'Prev3/'      , 'Prev2/'      , 'Prev1/'      , ''              , 'Next1/'      , 'Next2/'      , 'Next3/'        ]
fullprepList = [ 'preparePrev3', 'preparePrev2', 'preparePrev1', 'prepareCentral', 'prepareNext1', 'prepareNext2', 'prepareNext3'  ]
fulldecoList = [ 'decodePrev3' , 'decodePrev2' , 'decodePrev1' , 'decodeCentral' , 'decodeNext1' , 'decodeNext2' , 'decodeNext3'   ]
loc      = []
prepList = []
decoList = []
countmissing = []
for s in range(firstsampleprev,lastsamplenext+1):  # a subselection 
    loc.append(      fullloc     [s])
    prepList.append( fullprepList[s])
    decoList.append( fulldecoList[s])
    print 'Subselected sample ',s,'  loc: ',fullloc[s],'  prep: ',fullprepList[s],'  deco: ',fulldecoList[s]
    countmissing.append(0)
b1bcidoffset = 2346
b2bcidoffset = 1395
bcidlist = []
files = []
rootfile = 'none'

if runnumber == '1588':
   rootfile = 'Run_0001588_20160427.root'
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001588_20160427-000411.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001588_20160427-000920.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001588_20160427-001922.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001588_20160427-001426.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   LHCbucketsB2   = [1, 29731]
   LHCbucketsB1 = [1,28731]
   fillnr       = 4873
   bcidlist = [2169]

if runnumber == '1589':
   rootfile = 'Run_0001589_20160503.root'
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001589_20160427-102746.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001589_20160427-102853.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001589_20160427-102957.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001589_20160427-103101.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
   LHCbucketsB2   = [1,2001,4001,6001,8911,10911,12911,14911,17851,19851,21851,23851]
   LHCbucketsB1 = [1,2001,4001,6001,8941,10941,12941,14941,17851,19851,21851,23851]
   fillnr       = 4874

if runnumber == '1599':
  rootfile = 'Run_0001599_20160510.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001599_20160510-181709.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1001,18851]
  LHCbucketsB2 = [1001,9911]

if runnumber == '1609':
  rootfile = 'Run_0001609_20160510.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001609_20160510-220001.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,2991,3001,3011,3021,3031,3041,3051,3061,3071,3081,3091,3101,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4351,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,13291,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,22231,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,31111,31121,31131,31141,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821]
  LHCbucketsB2 = [1,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4351,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,13291,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,22231,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,31111,31121,31131,31141,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821]

if runnumber == '1620':
  rootfile = 'Run_0001620_20160517.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001620_20160517-135458.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001620_20160517-135605.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001620_20160517-135708.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001620_20160517-135812.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,401,801,2211,2611,3011,3411,3811,4211,4611,5011,8741,9141,9541,9941,11111,11511,11911,12311,12711,13111,13511,13911,14311,14711,15111,15511,16091,16491,16891,17291,17991,18391,18791,19191,23431,23831,24231,24631,25031,25431,25831,26231,27931,28331,28731,29131,29531,29931,30331,30731,31131,31531,31931,32331]
  LHCbucketsB2 = [1,401,801,1201,1601,2001,2401,2801,3201,3601,4001,4401,4801,5201,5601,8741,9141,9541,9941,14491,14891,15291,15691,16091,16491,16891,17291,20021,20421,20821,21221,21621,22021,22421,22821,23221,23621,24021,24421,26901,27301,27701,28101,28911,29311,29711,30111,30511,30911,31311,31711]

if runnumber == '1630':
  rootfile = 'Run_0001630_20160518.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001630_20160518-110516.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,11,21,31,41,51,61,71,81,91,101,111,791,801,811,821,831,841,851,861,871,881,891,901,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,8911,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]
  LHCbucketsB2 = [301,311,321,331,341,351,361,371,381,391,401,411,791,801,811,821,831,841,851,861,871,881,891,901,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,8911,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]

if runnumber == '1636':
  rootfile = 'Run_0001636_20160520.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001636_20160520-114123.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,901,911,921,931,941,951,961,971,981,991,1001,1011,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]
  LHCbucketsB2 = [1,1201,1211,1221,1231,1241,1251,1261,1271,1281,1291,1301,1311,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]

if runnumber == '1688':
  rootfile = 'Run_0001688_20160527.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001688_20160527-100415.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,401,801,1201,1601,2001,2401,2801,5501,5901,6301,6701,7101,7501,7901,8301,8711,9111,9511,9911,10311,10711,11111,11511,12241,12641,13041,13441,13841,14241,14641,15041,17821,18221,18621,19021,19421,19821,20221,20621,21721,22121,22521,22921,26531,26931,27331,27731,28131,28531,28931,29331,30031,30431,30831,31231]
  LHCbucketsB2 = [1,401,801,1201,1601,2001,2401,2801,3301,3701,4101,4501,4901,5301,5701,6101,8711,9111,9511,9911,10311,10711,11111,11511,14411,14811,15211,15611,16011,16411,16811,17211,17821,18221,18621,19021,19421,19821,20221,20621,26531,26931,27331,27731,28131,28531,28931,29331,30631,31031,31431,31831]

if runnumber == '1700':
  rootfile = 'Run_0001700_20160527.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001700_20160527-121640.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,401,801,1201,1601,2001,2401,2801,5501,5901,6301,6701,7101,7501,7901,8301,8711,9111,9511,9911,10311,10711,11111,11511,12241,12641,13041,13441,13841,14241,14641,15041,17821,18221,18621,19021,19421,19821,20221,20621,21721,22121,22521,22921,26531,26931,27331,27731,28131,28531,28931,29331,30031,30431,30831,31231]
  LHCbucketsB2 = [1,401,801,1201,1601,2001,2401,2801,3301,3701,4101,4501,4901,5301,5701,6101,8711,9111,9511,9911,10311,10711,11111,11511,14411,14811,15211,15611,16011,16411,16811,17211,17821,18221,18621,19021,19421,19821,20221,20621,26531,26931,27331,27731,28131,28531,28931,29331,30631,31031,31431,31831]

if runnumber == '1710':
  rootfile = 'Run_0001710_20160527.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001710_20160527-134148.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,401,801,1201,1601,2001,2401,2801,5501,5901,6301,6701,7101,7501,7901,8301,8711,9111,9511,9911,10311,10711,11111,11511,12241,12641,13041,13441,13841,14241,14641,15041,17821,18221,18621,19021,19421,19821,20221,20621,21721,22121,22521,22921,26531,26931,27331,27731,28131,28531,28931,29331,30031,30431,30831,31231]
  LHCbucketsB2 = [1,401,801,1201,1601,2001,2401,2801,3301,3701,4101,4501,4901,5301,5701,6101,8711,9111,9511,9911,10311,10711,11111,11511,14411,14811,15211,15611,16011,16411,16811,17211,17821,18221,18621,19021,19421,19821,20221,20621,26531,26931,27331,27731,28131,28531,28931,29331,30631,31031,31431,31831]

if runnumber == '1711':
  rootfile = 'Run_0001711_20160527.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001711_20160527-134348.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,401,801,1201,1601,2001,2401,2801,5501,5901,6301,6701,7101,7501,7901,8301,8711,9111,9511,9911,10311,10711,11111,11511,12241,12641,13041,13441,13841,14241,14641,15041,17821,18221,18621,19021,19421,19821,20221,20621,21721,22121,22521,22921,26531,26931,27331,27731,28131,28531,28931,29331,30031,30431,30831,31231]
  LHCbucketsB2 = [1,401,801,1201,1601,2001,2401,2801,3301,3701,4101,4501,4901,5301,5701,6101,8711,9111,9511,9911,10311,10711,11111,11511,14411,14811,15211,15611,16011,16411,16811,17211,17821,18221,18621,19021,19421,19821,20221,20621,26531,26931,27331,27731,28131,28531,28931,29331,30631,31031,31431,31831]

if runnumber == '1712':
  rootfile = 'Run_0001712_20160527_l0latency113.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001712_20160527-134540.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB1 = [1,901,911,921,931,941,951,961,971,981,991,1001,1011,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]
  LHCbucketsB2 = [1,1201,1211,1221,1231,1241,1251,1261,1271,1281,1291,1301,1311,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,2181,2191,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,3271,3281,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,4361,4371,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5451,5461,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,11121,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,12211,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,13301,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14391,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,20061,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,21151,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,22241,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,23331,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,27881,27891,27901,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28971,28981,28991,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,30061,30071,30081,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,31151,31161,31171,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861]

if runnumber == '1822':
  rootfile = 'Run_0001822_20160819.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001822_20160819-193328.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB2   = [131,141,151,161,171,181,191,201,211,221,231,241,621,631,641,651,661,671,681,691,701,711,721,731,1111,1121,1131,1141,1151,1161,1171,1181,1191,1201,1211,1221,1231,1241,1251,1261,1271,1281,1291,1301,1311,1321,1331,1341,1351,1361,1371,1381,1391,1401,1411,1421,1431,1441,1451,1461,1471,1481,1491,1501,1511,1521,1531,1541,1551,1561,1571,1581,1591,1601,1611,1621,1631,1641,1651,1661,1671,1681,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,1811,1821,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,2901,2911,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,3991,4001,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5081,5091,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,6171,6181,6561,6571,6581,6591,6601,6611,6621,6631,6641,6651,6661,6671,6681,6691,6701,6711,6721,6731,6741,6751,6761,6771,6781,6791,6801,6811,6821,6831,6841,6851,6861,6871,6881,6891,6901,6911,6921,6931,6941,6951,6961,6971,6981,6991,7001,7011,7021,7031,7041,7051,7061,7071,7081,7091,7101,7111,7121,7131,7141,7151,7161,7171,7181,7191,7201,7211,7221,7231,7241,7251,7261,7271,7861,7871,7881,7891,7901,7911,7921,7931,7941,7951,7961,7971,7981,7991,8001,8011,8021,8031,8041,8051,8061,8071,8081,8091,8101,8111,8121,8131,8141,8151,8161,8171,8181,8191,8201,8211,8221,8231,8241,8251,8261,8271,8281,8291,8301,8311,8321,8331,8341,8351,8361,8371,8381,8391,8401,8411,8421,8431,8441,8451,8461,8471,8481,8491,8501,8511,8521,8531,8541,8551,8561,8571,8951,8961,8971,8981,8991,9001,9011,9021,9031,9041,9051,9061,9071,9081,9091,9101,9111,9121,9131,9141,9151,9161,9171,9181,9191,9201,9211,9221,9231,9241,9251,9261,9271,9281,9291,9301,9311,9321,9331,9341,9351,9361,9371,9381,9391,9401,9411,9421,9431,9441,9451,9461,9471,9481,9491,9501,9511,9521,9531,9541,9551,9561,9571,9581,9591,9601,9611,9621,9631,9641,9651,9661,10041,10051,10061,10071,10081,10091,10101,10111,10121,10131,10141,10151,10161,10171,10181,10191,10201,10211,10221,10231,10241,10251,10261,10271,10281,10291,10301,10311,10321,10331,10341,10351,10361,10371,10381,10391,10401,10411,10421,10431,10441,10451,10461,10471,10481,10491,10501,10511,10521,10531,10541,10551,10561,10571,10581,10591,10601,10611,10621,10631,10641,10651,10661,10671,10681,10691,10701,10711,10721,10731,10741,10751,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,11841,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,12931,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14021,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,15111,15491,15501,15511,15521,15531,15541,15551,15561,15571,15581,15591,15601,15611,15621,15631,15641,15651,15661,15671,15681,15691,15701,15711,15721,15731,15741,15751,15761,15771,15781,15791,15801,15811,15821,15831,15841,15851,15861,15871,15881,15891,15901,15911,15921,15931,15941,15951,15961,15971,15981,15991,16001,16011,16021,16031,16041,16051,16061,16071,16081,16091,16101,16111,16121,16131,16141,16151,16161,16171,16181,16191,16201,16801,16811,16821,16831,16841,16851,16861,16871,16881,16891,16901,16911,16921,16931,16941,16951,16961,16971,16981,16991,17001,17011,17021,17031,17041,17051,17061,17071,17081,17091,17101,17111,17121,17131,17141,17151,17161,17171,17181,17191,17201,17211,17221,17231,17241,17251,17261,17271,17281,17291,17301,17311,17321,17331,17341,17351,17361,17371,17381,17391,17401,17411,17421,17431,17441,17451,17461,17471,17481,17491,17501,17511,17891,17901,17911,17921,17931,17941,17951,17961,17971,17981,17991,18001,18011,18021,18031,18041,18051,18061,18071,18081,18091,18101,18111,18121,18131,18141,18151,18161,18171,18181,18191,18201,18211,18221,18231,18241,18251,18261,18271,18281,18291,18301,18311,18321,18331,18341,18351,18361,18371,18381,18391,18401,18411,18421,18431,18441,18451,18461,18471,18481,18491,18501,18511,18521,18531,18541,18551,18561,18571,18581,18591,18601,18981,18991,19001,19011,19021,19031,19041,19051,19061,19071,19081,19091,19101,19111,19121,19131,19141,19151,19161,19171,19181,19191,19201,19211,19221,19231,19241,19251,19261,19271,19281,19291,19301,19311,19321,19331,19341,19351,19361,19371,19381,19391,19401,19411,19421,19431,19441,19451,19461,19471,19481,19491,19501,19511,19521,19531,19541,19551,19561,19571,19581,19591,19601,19611,19621,19631,19641,19651,19661,19671,19681,19691,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,20781,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,21871,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,22961,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,24051,24431,24441,24451,24461,24471,24481,24491,24501,24511,24521,24531,24541,24551,24561,24571,24581,24591,24601,24611,24621,24631,24641,24651,24661,24671,24681,24691,24701,24711,24721,24731,24741,24751,24761,24771,24781,24791,24801,24811,24821,24831,24841,24851,24861,24871,24881,24891,24901,24911,24921,24931,24941,24951,24961,24971,24981,24991,25001,25011,25021,25031,25041,25051,25061,25071,25081,25091,25101,25111,25121,25131,25141,25731,25741,25751,25761,25771,25781,25791,25801,25811,25821,25831,25841,25851,25861,25871,25881,25891,25901,25911,25921,25931,25941,25951,25961,25971,25981,25991,26001,26011,26021,26031,26041,26051,26061,26071,26081,26091,26101,26111,26121,26131,26141,26151,26161,26171,26181,26191,26201,26211,26221,26231,26241,26251,26261,26271,26281,26291,26301,26311,26321,26331,26341,26351,26361,26371,26381,26391,26401,26411,26421,26431,26441,26821,26831,26841,26851,26861,26871,26881,26891,26901,26911,26921,26931,26941,26951,26961,26971,26981,26991,27001,27011,27021,27031,27041,27051,27061,27071,27081,27091,27101,27111,27121,27131,27141,27151,27161,27171,27181,27191,27201,27211,27221,27231,27241,27251,27261,27271,27281,27291,27301,27311,27321,27331,27341,27351,27361,27371,27381,27391,27401,27411,27421,27431,27441,27451,27461,27471,27481,27491,27501,27511,27521,27531,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28601,28611,28621,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,29691,29701,29711,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,30781,30791,30801,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861,31871,31881,31891]
  LHCbucketsB1 = [11,21,31,41,51,61,71,81,91,101,111,121,621,631,641,651,661,671,681,691,701,711,721,731,1111,1121,1131,1141,1151,1161,1171,1181,1191,1201,1211,1221,1231,1241,1251,1261,1271,1281,1291,1301,1311,1321,1331,1341,1351,1361,1371,1381,1391,1401,1411,1421,1431,1441,1451,1461,1471,1481,1491,1501,1511,1521,1531,1541,1551,1561,1571,1581,1591,1601,1611,1621,1631,1641,1651,1661,1671,1681,1691,1701,1711,1721,1731,1741,1751,1761,1771,1781,1791,1801,1811,1821,2201,2211,2221,2231,2241,2251,2261,2271,2281,2291,2301,2311,2321,2331,2341,2351,2361,2371,2381,2391,2401,2411,2421,2431,2441,2451,2461,2471,2481,2491,2501,2511,2521,2531,2541,2551,2561,2571,2581,2591,2601,2611,2621,2631,2641,2651,2661,2671,2681,2691,2701,2711,2721,2731,2741,2751,2761,2771,2781,2791,2801,2811,2821,2831,2841,2851,2861,2871,2881,2891,2901,2911,3291,3301,3311,3321,3331,3341,3351,3361,3371,3381,3391,3401,3411,3421,3431,3441,3451,3461,3471,3481,3491,3501,3511,3521,3531,3541,3551,3561,3571,3581,3591,3601,3611,3621,3631,3641,3651,3661,3671,3681,3691,3701,3711,3721,3731,3741,3751,3761,3771,3781,3791,3801,3811,3821,3831,3841,3851,3861,3871,3881,3891,3901,3911,3921,3931,3941,3951,3961,3971,3981,3991,4001,4381,4391,4401,4411,4421,4431,4441,4451,4461,4471,4481,4491,4501,4511,4521,4531,4541,4551,4561,4571,4581,4591,4601,4611,4621,4631,4641,4651,4661,4671,4681,4691,4701,4711,4721,4731,4741,4751,4761,4771,4781,4791,4801,4811,4821,4831,4841,4851,4861,4871,4881,4891,4901,4911,4921,4931,4941,4951,4961,4971,4981,4991,5001,5011,5021,5031,5041,5051,5061,5071,5081,5091,5471,5481,5491,5501,5511,5521,5531,5541,5551,5561,5571,5581,5591,5601,5611,5621,5631,5641,5651,5661,5671,5681,5691,5701,5711,5721,5731,5741,5751,5761,5771,5781,5791,5801,5811,5821,5831,5841,5851,5861,5871,5881,5891,5901,5911,5921,5931,5941,5951,5961,5971,5981,5991,6001,6011,6021,6031,6041,6051,6061,6071,6081,6091,6101,6111,6121,6131,6141,6151,6161,6171,6181,6561,6571,6581,6591,6601,6611,6621,6631,6641,6651,6661,6671,6681,6691,6701,6711,6721,6731,6741,6751,6761,6771,6781,6791,6801,6811,6821,6831,6841,6851,6861,6871,6881,6891,6901,6911,6921,6931,6941,6951,6961,6971,6981,6991,7001,7011,7021,7031,7041,7051,7061,7071,7081,7091,7101,7111,7121,7131,7141,7151,7161,7171,7181,7191,7201,7211,7221,7231,7241,7251,7261,7271,7861,7871,7881,7891,7901,7911,7921,7931,7941,7951,7961,7971,7981,7991,8001,8011,8021,8031,8041,8051,8061,8071,8081,8091,8101,8111,8121,8131,8141,8151,8161,8171,8181,8191,8201,8211,8221,8231,8241,8251,8261,8271,8281,8291,8301,8311,8321,8331,8341,8351,8361,8371,8381,8391,8401,8411,8421,8431,8441,8451,8461,8471,8481,8491,8501,8511,8521,8531,8541,8551,8561,8571,8951,8961,8971,8981,8991,9001,9011,9021,9031,9041,9051,9061,9071,9081,9091,9101,9111,9121,9131,9141,9151,9161,9171,9181,9191,9201,9211,9221,9231,9241,9251,9261,9271,9281,9291,9301,9311,9321,9331,9341,9351,9361,9371,9381,9391,9401,9411,9421,9431,9441,9451,9461,9471,9481,9491,9501,9511,9521,9531,9541,9551,9561,9571,9581,9591,9601,9611,9621,9631,9641,9651,9661,10041,10051,10061,10071,10081,10091,10101,10111,10121,10131,10141,10151,10161,10171,10181,10191,10201,10211,10221,10231,10241,10251,10261,10271,10281,10291,10301,10311,10321,10331,10341,10351,10361,10371,10381,10391,10401,10411,10421,10431,10441,10451,10461,10471,10481,10491,10501,10511,10521,10531,10541,10551,10561,10571,10581,10591,10601,10611,10621,10631,10641,10651,10661,10671,10681,10691,10701,10711,10721,10731,10741,10751,11131,11141,11151,11161,11171,11181,11191,11201,11211,11221,11231,11241,11251,11261,11271,11281,11291,11301,11311,11321,11331,11341,11351,11361,11371,11381,11391,11401,11411,11421,11431,11441,11451,11461,11471,11481,11491,11501,11511,11521,11531,11541,11551,11561,11571,11581,11591,11601,11611,11621,11631,11641,11651,11661,11671,11681,11691,11701,11711,11721,11731,11741,11751,11761,11771,11781,11791,11801,11811,11821,11831,11841,12221,12231,12241,12251,12261,12271,12281,12291,12301,12311,12321,12331,12341,12351,12361,12371,12381,12391,12401,12411,12421,12431,12441,12451,12461,12471,12481,12491,12501,12511,12521,12531,12541,12551,12561,12571,12581,12591,12601,12611,12621,12631,12641,12651,12661,12671,12681,12691,12701,12711,12721,12731,12741,12751,12761,12771,12781,12791,12801,12811,12821,12831,12841,12851,12861,12871,12881,12891,12901,12911,12921,12931,13311,13321,13331,13341,13351,13361,13371,13381,13391,13401,13411,13421,13431,13441,13451,13461,13471,13481,13491,13501,13511,13521,13531,13541,13551,13561,13571,13581,13591,13601,13611,13621,13631,13641,13651,13661,13671,13681,13691,13701,13711,13721,13731,13741,13751,13761,13771,13781,13791,13801,13811,13821,13831,13841,13851,13861,13871,13881,13891,13901,13911,13921,13931,13941,13951,13961,13971,13981,13991,14001,14011,14021,14401,14411,14421,14431,14441,14451,14461,14471,14481,14491,14501,14511,14521,14531,14541,14551,14561,14571,14581,14591,14601,14611,14621,14631,14641,14651,14661,14671,14681,14691,14701,14711,14721,14731,14741,14751,14761,14771,14781,14791,14801,14811,14821,14831,14841,14851,14861,14871,14881,14891,14901,14911,14921,14931,14941,14951,14961,14971,14981,14991,15001,15011,15021,15031,15041,15051,15061,15071,15081,15091,15101,15111,15491,15501,15511,15521,15531,15541,15551,15561,15571,15581,15591,15601,15611,15621,15631,15641,15651,15661,15671,15681,15691,15701,15711,15721,15731,15741,15751,15761,15771,15781,15791,15801,15811,15821,15831,15841,15851,15861,15871,15881,15891,15901,15911,15921,15931,15941,15951,15961,15971,15981,15991,16001,16011,16021,16031,16041,16051,16061,16071,16081,16091,16101,16111,16121,16131,16141,16151,16161,16171,16181,16191,16201,16801,16811,16821,16831,16841,16851,16861,16871,16881,16891,16901,16911,16921,16931,16941,16951,16961,16971,16981,16991,17001,17011,17021,17031,17041,17051,17061,17071,17081,17091,17101,17111,17121,17131,17141,17151,17161,17171,17181,17191,17201,17211,17221,17231,17241,17251,17261,17271,17281,17291,17301,17311,17321,17331,17341,17351,17361,17371,17381,17391,17401,17411,17421,17431,17441,17451,17461,17471,17481,17491,17501,17511,17891,17901,17911,17921,17931,17941,17951,17961,17971,17981,17991,18001,18011,18021,18031,18041,18051,18061,18071,18081,18091,18101,18111,18121,18131,18141,18151,18161,18171,18181,18191,18201,18211,18221,18231,18241,18251,18261,18271,18281,18291,18301,18311,18321,18331,18341,18351,18361,18371,18381,18391,18401,18411,18421,18431,18441,18451,18461,18471,18481,18491,18501,18511,18521,18531,18541,18551,18561,18571,18581,18591,18601,18981,18991,19001,19011,19021,19031,19041,19051,19061,19071,19081,19091,19101,19111,19121,19131,19141,19151,19161,19171,19181,19191,19201,19211,19221,19231,19241,19251,19261,19271,19281,19291,19301,19311,19321,19331,19341,19351,19361,19371,19381,19391,19401,19411,19421,19431,19441,19451,19461,19471,19481,19491,19501,19511,19521,19531,19541,19551,19561,19571,19581,19591,19601,19611,19621,19631,19641,19651,19661,19671,19681,19691,20071,20081,20091,20101,20111,20121,20131,20141,20151,20161,20171,20181,20191,20201,20211,20221,20231,20241,20251,20261,20271,20281,20291,20301,20311,20321,20331,20341,20351,20361,20371,20381,20391,20401,20411,20421,20431,20441,20451,20461,20471,20481,20491,20501,20511,20521,20531,20541,20551,20561,20571,20581,20591,20601,20611,20621,20631,20641,20651,20661,20671,20681,20691,20701,20711,20721,20731,20741,20751,20761,20771,20781,21161,21171,21181,21191,21201,21211,21221,21231,21241,21251,21261,21271,21281,21291,21301,21311,21321,21331,21341,21351,21361,21371,21381,21391,21401,21411,21421,21431,21441,21451,21461,21471,21481,21491,21501,21511,21521,21531,21541,21551,21561,21571,21581,21591,21601,21611,21621,21631,21641,21651,21661,21671,21681,21691,21701,21711,21721,21731,21741,21751,21761,21771,21781,21791,21801,21811,21821,21831,21841,21851,21861,21871,22251,22261,22271,22281,22291,22301,22311,22321,22331,22341,22351,22361,22371,22381,22391,22401,22411,22421,22431,22441,22451,22461,22471,22481,22491,22501,22511,22521,22531,22541,22551,22561,22571,22581,22591,22601,22611,22621,22631,22641,22651,22661,22671,22681,22691,22701,22711,22721,22731,22741,22751,22761,22771,22781,22791,22801,22811,22821,22831,22841,22851,22861,22871,22881,22891,22901,22911,22921,22931,22941,22951,22961,23341,23351,23361,23371,23381,23391,23401,23411,23421,23431,23441,23451,23461,23471,23481,23491,23501,23511,23521,23531,23541,23551,23561,23571,23581,23591,23601,23611,23621,23631,23641,23651,23661,23671,23681,23691,23701,23711,23721,23731,23741,23751,23761,23771,23781,23791,23801,23811,23821,23831,23841,23851,23861,23871,23881,23891,23901,23911,23921,23931,23941,23951,23961,23971,23981,23991,24001,24011,24021,24031,24041,24051,24431,24441,24451,24461,24471,24481,24491,24501,24511,24521,24531,24541,24551,24561,24571,24581,24591,24601,24611,24621,24631,24641,24651,24661,24671,24681,24691,24701,24711,24721,24731,24741,24751,24761,24771,24781,24791,24801,24811,24821,24831,24841,24851,24861,24871,24881,24891,24901,24911,24921,24931,24941,24951,24961,24971,24981,24991,25001,25011,25021,25031,25041,25051,25061,25071,25081,25091,25101,25111,25121,25131,25141,25731,25741,25751,25761,25771,25781,25791,25801,25811,25821,25831,25841,25851,25861,25871,25881,25891,25901,25911,25921,25931,25941,25951,25961,25971,25981,25991,26001,26011,26021,26031,26041,26051,26061,26071,26081,26091,26101,26111,26121,26131,26141,26151,26161,26171,26181,26191,26201,26211,26221,26231,26241,26251,26261,26271,26281,26291,26301,26311,26321,26331,26341,26351,26361,26371,26381,26391,26401,26411,26421,26431,26441,26821,26831,26841,26851,26861,26871,26881,26891,26901,26911,26921,26931,26941,26951,26961,26971,26981,26991,27001,27011,27021,27031,27041,27051,27061,27071,27081,27091,27101,27111,27121,27131,27141,27151,27161,27171,27181,27191,27201,27211,27221,27231,27241,27251,27261,27271,27281,27291,27301,27311,27321,27331,27341,27351,27361,27371,27381,27391,27401,27411,27421,27431,27441,27451,27461,27471,27481,27491,27501,27511,27521,27531,27911,27921,27931,27941,27951,27961,27971,27981,27991,28001,28011,28021,28031,28041,28051,28061,28071,28081,28091,28101,28111,28121,28131,28141,28151,28161,28171,28181,28191,28201,28211,28221,28231,28241,28251,28261,28271,28281,28291,28301,28311,28321,28331,28341,28351,28361,28371,28381,28391,28401,28411,28421,28431,28441,28451,28461,28471,28481,28491,28501,28511,28521,28531,28541,28551,28561,28571,28581,28591,28601,28611,28621,29001,29011,29021,29031,29041,29051,29061,29071,29081,29091,29101,29111,29121,29131,29141,29151,29161,29171,29181,29191,29201,29211,29221,29231,29241,29251,29261,29271,29281,29291,29301,29311,29321,29331,29341,29351,29361,29371,29381,29391,29401,29411,29421,29431,29441,29451,29461,29471,29481,29491,29501,29511,29521,29531,29541,29551,29561,29571,29581,29591,29601,29611,29621,29631,29641,29651,29661,29671,29681,29691,29701,29711,30091,30101,30111,30121,30131,30141,30151,30161,30171,30181,30191,30201,30211,30221,30231,30241,30251,30261,30271,30281,30291,30301,30311,30321,30331,30341,30351,30361,30371,30381,30391,30401,30411,30421,30431,30441,30451,30461,30471,30481,30491,30501,30511,30521,30531,30541,30551,30561,30571,30581,30591,30601,30611,30621,30631,30641,30651,30661,30671,30681,30691,30701,30711,30721,30731,30741,30751,30761,30771,30781,30791,30801,31181,31191,31201,31211,31221,31231,31241,31251,31261,31271,31281,31291,31301,31311,31321,31331,31341,31351,31361,31371,31381,31391,31401,31411,31421,31431,31441,31451,31461,31471,31481,31491,31501,31511,31521,31531,31541,31551,31561,31571,31581,31591,31601,31611,31621,31631,31641,31651,31661,31671,31681,31691,31701,31711,31721,31731,31741,31751,31761,31771,31781,31791,31801,31811,31821,31831,31841,31851,31861,31871,31881,31891]

if runnumber == '1932':
  rootfile = 'Run_0001932_20161128.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001932_20161128-225503.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001932_20161128-230557.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001932_20161128-230928.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001932_20161128-231303.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  LHCbucketsB2 = [681,721,761,801,841,881,921,961,1001,1041,1081,1121,1161,1201,1241,1281,1321,1361,1441,1481,1521,1561,1601,1641,1681,1721,1761,1801,1841,1881,1921,1961,2001,2041,2081,2121,2481,2521,2561,2601,2641,2681,2721,2761,2801,2841,2881,2921,2961,3001,3041,3081,3121,3161,3241,3281,3321,3361,3401,3441,3481,3521,3561,3601,3641,3681,3721,3761,3801,3841,3881,3921,4241,4281,4321,4361,4401,4441,4481,4521,4561,4601,4641,4681,4721,4761,4801,4841,4881,4921,5001,5041,5081,5121,5161,5201,5241,5281,5321,5361,5401,5441,5481,5521,5561,5601,5641,5681,6001,6041,6081,6121,6161,6201,6241,6281,6321,6361,6401,6441,6481,6521,6561,6601,6641,6681,6761,6801,6841,6881,6921,6961,7001,7041,7081,7121,7161,7201,7241,7281,7321,7361,7401,7441,7801,7841,7881,7921,7961,8001,8041,8081,8121,8161,8201,8241,8281,8321,8361,8401,8441,8481,8561,8601,8641,8681,8721,8761,8801,8841,8881,8921,8961,9001,9041,9081,9121,9161,9201,9241,9581,9621,9661,9701,9741,9781,9821,9861,9901,9941,9981,10021,10061,10101,10141,10181,10221,10261,10341,10381,10421,10461,10501,10541,10581,10621,10661,10701,10741,10781,10821,10861,10901,10941,10981,11021,11381,11421,11461,11501,11541,11581,11621,11661,11701,11741,11781,11821,11861,11901,11941,11981,12021,12061,12141,12181,12221,12261,12301,12341,12381,12421,12461,12501,12541,12581,12621,12661,12701,12741,12781,12821,13141,13181,13221,13261,13301,13341,13381,13421,13461,13501,13541,13581,13621,13661,13701,13741,13781,13821,13901,13941,13981,14021,14061,14101,14141,14181,14221,14261,14301,14341,14381,14421,14461,14501,14541,14581,14901,14941,14981,15021,15061,15101,15141,15181,15221,15261,15301,15341,15381,15421,15461,15501,15541,15581,15661,15701,15741,15781,15821,15861,15901,15941,15981,16021,16061,16101,16141,16181,16221,16261,16301,16341,16751,16791,16831,16871,16911,16951,16991,17031,17071,17111,17151,17191,17231,17271,17311,17351,17391,17431,17511,17551,17591,17631,17671,17711,17751,17791,17831,17871,17911,17951,17991,18031,18071,18111,18151,18191,18511,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19271,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,20301,20341,20381,20421,20461,20501,20541,20581,20621,20661,20701,20741,20781,20821,20861,20901,20941,20981,21061,21101,21141,21181,21221,21261,21301,21341,21381,21421,21461,21501,21541,21581,21621,21661,21701,21741,22061,22101,22141,22181,22221,22261,22301,22341,22381,22421,22461,22501,22541,22581,22621,22661,22701,22741,22821,22861,22901,22941,22981,23021,23061,23101,23141,23181,23221,23261,23301,23341,23381,23421,23461,23501,23861,23901,23941,23981,24021,24061,24101,24141,24181,24221,24261,24301,24341,24381,24421,24461,24501,24541,24621,24661,24701,24741,24781,24821,24861,24901,24941,24981,25021,25061,25101,25141,25181,25221,25261,25301,25661,25701,25741,25781,25821,25861,25901,25941,25981,26021,26061,26101,26141,26181,26221,26261,26301,26341,26421,26461,26501,26541,26581,26621,26661,26701,26741,26781,26821,26861,26901,26941,26981,27021,27061,27101,27421,27461,27501,27541,27581,27621,27661,27701,27741,27781,27821,27861,27901,27941,27981,28021,28061,28101,28181,28221,28261,28301,28341,28381,28421,28461,28501,28541,28581,28621,28661,28701,28741,28781,28821,28861,29211,29251,29291,29331,29371,29411,29451,29491,29531,29571,29611,29651,29691,29731,29771,29811,29851,29891,29971,30011,30051,30091,30131,30171,30211,30251,30291,30331,30371,30411,30451,30491,30531,30571,30611,30651,30971,31011,31051,31091,31131,31171,31211,31251,31291,31331,31371,31411,31451,31491,31531,31571,31611,31651,31731,31771,31811,31851,31891,31931,31971,32011,32051,32091,32131,32171,32211,32251,32291,32331,32371,32411,32731,32771,32811,32851,32891,32931,32971,33011,33051,33091,33131,33171,33211,33251,33291,33331,33371,33411,33491,33531,33571,33611,33651,33691,33731,33771,33811,33851,33891,33931,33971,34011,34051,34091,34131,34171]
  LHCbucketsB1 = [41,81,121,161,241,281,321,361,721,761,801,841,921,961,1001,1041,1121,1161,1201,1241,1321,1361,1401,1441,1521,1561,1601,1641,1721,1761,1801,1841,1921,1961,2001,2041,2471,2511,2551,2591,2671,2711,2751,2791,2871,2911,2951,2991,3071,3111,3151,3191,3271,3311,3351,3391,3471,3511,3551,3591,3671,3711,3751,3791,4231,4271,4311,4351,4431,4471,4511,4551,4631,4671,4711,4751,4831,4871,4911,4951,5031,5071,5111,5151,5231,5271,5311,5351,5431,5471,5511,5551,5991,6031,6071,6111,6191,6231,6271,6311,6391,6431,6471,6511,6591,6631,6671,6711,6791,6831,6871,6911,6991,7031,7071,7111,7191,7231,7271,7311,7841,7881,7921,7961,8041,8081,8121,8161,8241,8281,8321,8361,8441,8481,8521,8561,8641,8681,8721,8761,8841,8881,8921,8961,9041,9081,9121,9161,9581,9621,9661,9701,9781,9821,9861,9901,9981,10021,10061,10101,10181,10221,10261,10301,10381,10421,10461,10501,10581,10621,10661,10701,10781,10821,10861,10901,11381,11421,11461,11501,11581,11621,11661,11701,11781,11821,11861,11901,11981,12021,12061,12101,12181,12221,12261,12301,12381,12421,12461,12501,12581,12621,12661,12701,13141,13181,13221,13261,13341,13381,13421,13461,13541,13581,13621,13661,13741,13781,13821,13861,13941,13981,14021,14061,14141,14181,14221,14261,14341,14381,14421,14461,14901,14941,14981,15021,15101,15141,15181,15221,15301,15341,15381,15421,15501,15541,15581,15621,15701,15741,15781,15821,15901,15941,15981,16021,16101,16141,16181,16221,16791,16831,16871,16911,16991,17031,17071,17111,17191,17231,17271,17311,17391,17431,17471,17511,17591,17631,17671,17711,17791,17831,17871,17911,17991,18031,18071,18111,18511,18551,18591,18631,18711,18751,18791,18831,18911,18951,18991,19031,19111,19151,19191,19231,19311,19351,19391,19431,19511,19551,19591,19631,19711,19751,19791,19831,20301,20341,20381,20421,20501,20541,20581,20621,20701,20741,20781,20821,20901,20941,20981,21021,21101,21141,21181,21221,21301,21341,21381,21421,21501,21541,21581,21621,22061,22101,22141,22181,22261,22301,22341,22381,22461,22501,22541,22581,22661,22701,22741,22781,22861,22901,22941,22981,23061,23101,23141,23181,23261,23301,23341,23381,23861,23901,23941,23981,24061,24101,24141,24181,24261,24301,24341,24381,24461,24501,24541,24581,24661,24701,24741,24781,24861,24901,24941,24981,25061,25101,25141,25181,25701,25741,25781,25821,25901,25941,25981,26021,26101,26141,26181,26221,26301,26341,26381,26421,26501,26541,26581,26621,26701,26741,26781,26821,26901,26941,26981,27021,27411,27451,27491,27531,27611,27651,27691,27731,27811,27851,27891,27931,28011,28051,28091,28131,28211,28251,28291,28331,28411,28451,28491,28531,28611,28651,28691,28731,29171,29211,29251,29291,29371,29411,29451,29491,29571,29611,29651,29691,29771,29811,29851,29891,29971,30011,30051,30091,30171,30211,30251,30291,30371,30411,30451,30491,30931,30971,31011,31051,31131,31171,31211,31251,31331,31371,31411,31451,31531,31571,31611,31651,31731,31771,31811,31851,31931,31971,32011,32051,32131,32171,32211,32251,32691,32731,32771,32811,32891,32931,32971,33011,33091,33131,33171,33211,33291,33331,33371,33411,33491,33531,33571,33611,33691,33731,33771,33811,33891,33931,33971,34011]
  fillnr       = 5553

if runnumber == '1935':
  rootfile = 'Run_0001935_20161130.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001935_20161130-111919.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  bcidlist = []

if runnumber == '1937':
  rootfile = 'Run_0001937_20161130_l0latency112.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001937_20161130-121313.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001937_20161130-122043.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001937_20161130-122813.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001937_20161130-123548.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5559
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1948':
  rootfile = 'Run_0001948_20161201.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001948_20161201-203854.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5565
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]
  
if runnumber == '1949':
  rootfile = 'Run_000194_20161201.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001949_20161201-204907.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5565
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]
  
if runnumber == '1950':
  rootfile = 'Run_0001950_20161201.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001950_20161201-205835.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5565
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]
  
if runnumber == '1953':
  rootfile = 'Run_0001953_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001953_20161202-114303.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]


if runnumber == '1954':
  rootfile = 'Run_0001954_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/project/lhcbgv/user/andreas/data/Run_0001954_20161202-150313.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1956':
  rootfile = 'Run_0001956_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001956_20161202-164720.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1957':
  rootfile = 'Run_0001957_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001957_20161202-164848.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1958':
  rootfile = 'Run_0001958_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001958_20161202-165402.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1959':
  rootfile = 'Run_0001959_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001959_20161203-124729.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1960':
  rootfile = 'Run_0001960_20161202.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001960_20161203-125613.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5568
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1962':
  rootfile = 'Run_0001962_20161203_l0latency112.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001962_20161203-132815.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001962_20161203-132942.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001962_20161203-133108.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001962_20161203-133233.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5571
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1963':
  rootfile = 'Run_0001963_20161203_l0latency111.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001963_20161203-192251.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5571
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1964':
  rootfile = 'Run_0001964_20161203_l0latency111.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001964_20161203-194903.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5571
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]

if runnumber == '1965':
  rootfile = 'Run_0001965_20161203_l0latency111.root'
  files.append("DATAFILE='file:///afs/cern.ch/work/m/mrihl/public/Run_0001965_20161203-201253.bgvctrl.mdf' SVC='LHCb::MDFSelector'")
  fillnr       = 5571
  LHCbucketsB1 = [1,41,81,121,201,241,281,321,741,781,821,861,941,981,1021,1061,1141,1181,1221,1261,1341,1381,1421,1461,1541,1581,1621,1661,1741,1781,1821,1861,1941,1981,2021,2061,2501,2541,2581,2621,2701,2741,2781,2821,2901,2941,2981,3021,3101,3141,3181,3221,3301,3341,3381,3421,3501,3541,3581,3621,3701,3741,3781,3821,4261,4301,4341,4381,4461,4501,4541,4581,4661,4701,4741,4781,4861,4901,4941,4981,5061,5101,5141,5181,5261,5301,5341,5381,5461,5501,5541,5581,6021,6061,6101,6141,6221,6261,6301,6341,6421,6461,6501,6541,6621,6661,6701,6741,6821,6861,6901,6941,7021,7061,7101,7141,7221,7261,7301,7341,7791,7831,7871,7911,7991,8031,8071,8111,8191,8231,8271,8311,8391,8431,8471,8511,8591,8631,8671,8711,8791,8831,8871,8911,8991,9031,9071,9111,9571,9611,9651,9691,9771,9811,9851,9891,9971,10011,10051,10091,10171,10211,10251,10291,10371,10411,10451,10491,10571,10611,10651,10691,10771,10811,10851,10891,11331,11371,11411,11451,11531,11571,11611,11651,11731,11771,11811,11851,11931,11971,12011,12051,12131,12171,12211,12251,12331,12371,12411,12451,12531,12571,12611,12651,13091,13131,13171,13211,13291,13331,13371,13411,13491,13531,13571,13611,13691,13731,13771,13811,13891,13931,13971,14011,14091,14131,14171,14211,14291,14331,14371,14411,14851,14891,14931,14971,15051,15091,15131,15171,15251,15291,15331,15371,15451,15491,15531,15571,15651,15691,15731,15771,15851,15891,15931,15971,16051,16091,16131,16171,16771,16811,16851,16891,16971,17011,17051,17091,17171,17211,17251,17291,17371,17411,17451,17491,17571,17611,17651,17691,17771,17811,17851,17891,17971,18011,18051,18091,18551,18591,18631,18671,18751,18791,18831,18871,18951,18991,19031,19071,19151,19191,19231,19271,19351,19391,19431,19471,19551,19591,19631,19671,19751,19791,19831,19871,20311,20351,20391,20431,20511,20551,20591,20631,20711,20751,20791,20831,20911,20951,20991,21031,21111,21151,21191,21231,21311,21351,21391,21431,21511,21551,21591,21631,22071,22111,22151,22191,22271,22311,22351,22391,22471,22511,22551,22591,22671,22711,22751,22791,22871,22911,22951,22991,23071,23111,23151,23191,23271,23311,23351,23391,23831,23871,23911,23951,24031,24071,24111,24151,24231,24271,24311,24351,24431,24471,24511,24551,24631,24671,24711,24751,24831,24871,24911,24951,25031,25071,25111,25151,25751,25791,25831,25871,25951,25991,26031,26071,26151,26191,26231,26271,26351,26391,26431,26471,26551,26591,26631,26671,26751,26791,26831,26871,26951,26991,27031,27071,27551,27591,27631,27671,27751,27791,27831,27871,27951,27991,28031,28071,28151,28191,28231,28271,28351,28391,28431,28471,28551,28591,28631,28671,28751,28791,28831,28871,29311,29351,29391,29431,29511,29551,29591,29631,29711,29751,29791,29831,29911,29951,29991,30031,30111,30151,30191,30231,30311,30351,30391,30431,30511,30551,30591,30631,31071,31111,31151,31191,31271,31311,31351,31391,31471,31511,31551,31591,31671,31711,31751,31791,31871,31911,31951,31991,32071,32111,32151,32191,32271,32311,32351,32391,32831,32871,32911,32951,33031,33071,33111,33151,33231,33271,33311,33351,33431,33471,33511,33551,33631,33671,33711,33751,33831,33871,33911,33951,34031,34071,34111,34151]
  LHCbucketsB2 = [741,781,821,861,901,941,981,1021,1061,1101,1141,1181,1221,1261,1301,1341,1381,1421,1501,1541,1581,1621,1661,1701,1741,1781,1821,1861,1901,1941,1981,2021,2061,2101,2141,2181,2501,2541,2581,2621,2661,2701,2741,2781,2821,2861,2901,2941,2981,3021,3061,3101,3141,3181,3261,3301,3341,3381,3421,3461,3501,3541,3581,3621,3661,3701,3741,3781,3821,3861,3901,3941,4261,4301,4341,4381,4421,4461,4501,4541,4581,4621,4661,4701,4741,4781,4821,4861,4901,4941,5021,5061,5101,5141,5181,5221,5261,5301,5341,5381,5421,5461,5501,5541,5581,5621,5661,5701,6021,6061,6101,6141,6181,6221,6261,6301,6341,6381,6421,6461,6501,6541,6581,6621,6661,6701,6781,6821,6861,6901,6941,6981,7021,7061,7101,7141,7181,7221,7261,7301,7341,7381,7421,7461,7791,7831,7871,7911,7951,7991,8031,8071,8111,8151,8191,8231,8271,8311,8351,8391,8431,8471,8551,8591,8631,8671,8711,8751,8791,8831,8871,8911,8951,8991,9031,9071,9111,9151,9191,9231,9571,9611,9651,9691,9731,9771,9811,9851,9891,9931,9971,10011,10051,10091,10131,10171,10211,10251,10331,10371,10411,10451,10491,10531,10571,10611,10651,10691,10731,10771,10811,10851,10891,10931,10971,11011,11331,11371,11411,11451,11491,11531,11571,11611,11651,11691,11731,11771,11811,11851,11891,11931,11971,12011,12091,12131,12171,12211,12251,12291,12331,12371,12411,12451,12491,12531,12571,12611,12651,12691,12731,12771,13091,13131,13171,13211,13251,13291,13331,13371,13411,13451,13491,13531,13571,13611,13651,13691,13731,13771,13851,13891,13931,13971,14011,14051,14091,14131,14171,14211,14251,14291,14331,14371,14411,14451,14491,14531,14851,14891,14931,14971,15011,15051,15091,15131,15171,15211,15251,15291,15331,15371,15411,15451,15491,15531,15611,15651,15691,15731,15771,15811,15851,15891,15931,15971,16011,16051,16091,16131,16171,16211,16251,16291,16771,16811,16851,16891,16931,16971,17011,17051,17091,17131,17171,17211,17251,17291,17331,17371,17411,17451,17531,17571,17611,17651,17691,17731,17771,17811,17851,17891,17931,17971,18011,18051,18091,18131,18171,18211,18551,18591,18631,18671,18711,18751,18791,18831,18871,18911,18951,18991,19031,19071,19111,19151,19191,19231,19311,19351,19391,19431,19471,19511,19551,19591,19631,19671,19711,19751,19791,19831,19871,19911,19951,19991,20311,20351,20391,20431,20471,20511,20551,20591,20631,20671,20711,20751,20791,20831,20871,20911,20951,20991,21071,21111,21151,21191,21231,21271,21311,21351,21391,21431,21471,21511,21551,21591,21631,21671,21711,21751,22071,22111,22151,22191,22231,22271,22311,22351,22391,22431,22471,22511,22551,22591,22631,22671,22711,22751,22831,22871,22911,22951,22991,23031,23071,23111,23151,23191,23231,23271,23311,23351,23391,23431,23471,23511,23831,23871,23911,23951,23991,24031,24071,24111,24151,24191,24231,24271,24311,24351,24391,24431,24471,24511,24591,24631,24671,24711,24751,24791,24831,24871,24911,24951,24991,25031,25071,25111,25151,25191,25231,25271,25751,25791,25831,25871,25911,25951,25991,26031,26071,26111,26151,26191,26231,26271,26311,26351,26391,26431,26511,26551,26591,26631,26671,26711,26751,26791,26831,26871,26911,26951,26991,27031,27071,27111,27151,27191,27551,27591,27631,27671,27711,27751,27791,27831,27871,27911,27951,27991,28031,28071,28111,28151,28191,28231,28311,28351,28391,28431,28471,28511,28551,28591,28631,28671,28711,28751,28791,28831,28871,28911,28951,28991,29311,29351,29391,29431,29471,29511,29551,29591,29631,29671,29711,29751,29791,29831,29871,29911,29951,29991,30071,30111,30151,30191,30231,30271,30311,30351,30391,30431,30471,30511,30551,30591,30631,30671,30711,30751,31071,31111,31151,31191,31231,31271,31311,31351,31391,31431,31471,31511,31551,31591,31631,31671,31711,31751,31831,31871,31911,31951,31991,32031,32071,32111,32151,32191,32231,32271,32311,32351,32391,32431,32471,32511,32831,32871,32911,32951,32991,33031,33071,33111,33151,33191,33231,33271,33311,33351,33391,33431,33471,33511,33591,33631,33671,33711,33751,33791,33831,33871,33911,33951,33991,34031,34071,34111,34151,34191,34231,34271]





EventSelector().Input  = files
EventSelector().PrintFreq = 500

# init
appMgr      = AppMgr()
appMgr.addAlgorithm('LbAppInit')
for s in range(0,len(prepList)):
    appMgr.addAlgorithm('PrepareVeloFullRawBuffer/'+prepList[s])
    appMgr.addAlgorithm('DecodeVeloFullRawBuffer/'+decoList[s] )

# in TAE events ODIN bank exists only for central event
appMgr.addAlgorithm('createODIN')

prep = []
deco = []
for s in range(0,len(prepList)):
    print 'Added algo prepList[',s,'] to prep'
    prep.append(appMgr.algorithm(prepList[s]))
    deco.append(appMgr.algorithm(decoList[s]))
for s in range(0,len(prepList)):
    print 'Config prep[',s,'] with loc[',s,'] =',loc[s]
    prep[s].RunWithODIN = False
    prep[s].OutputLevel = 3
    prep[s].IgnoreErrorBanks = True
    prep[s].ADCLocation      = loc[s]+'Raw/Velo/ADCBank'
    prep[s].ADCPartialLoc    = loc[s]+'Raw/Velo/PreparedPartialADC'
    prep[s].RawEventLocation = loc[s]+'DAQ/RawEvent'
    print 'Config deco[',s,'] with loc[',s,'] =',loc[s]
    deco[s].CableOrder = [3, 2, 1, 0] 
    deco[s].SectorCorrection = False 
    deco[s].OutputLevel = 3
    deco[s].DecodedPartialADCLocation = loc[s]+'Raw/Velo/DecodedPartialADC'
    deco[s].ADCLocation               = loc[s]+'Raw/Velo/ADCBank'
    deco[s].DecodedADCLocation        = loc[s]+'Raw/Velo/DecodedADC'
    deco[s].DecodedHeaderLocation     = loc[s]+'Raw/Velo/DecodedHeaders'
    deco[s].EventInfoLocation         = loc[s]+'Raw/Velo/EvtInfo' 
    deco[s].DecodedPedestalLocation   = loc[s]+'Raw/Velo/DecodedPed'
for s in range(0,len(prepList)): 
    print 'Prepare algo : loc[',s,'] :   '
    props = prep[s].properties()
    for k in props.keys(): print '      ',k, props[k].value()
    print 'Decoder algo : loc[',s,']'
    props = deco[s].properties()
    for k in props.keys(): print '      ',k, props[k].value()



appMgr.OutputLevel = 3
#prepar.OutputLevel = 3
#decode.OutputLevel = 3

evt         = appMgr.evtsvc()
#f = TFile(rootfile, 'recreate')

def get_headerdata_by_key(headers,key):
    for h in headers.containedObjects():
          k = h.key()
          if k == key: 
             hdata = h.decodedData()
             return  hdata 

def get_adcdata_by_key(adcs,key):
    for a in adcs.containedObjects():
          k = a.key()
          if k == key: 
             adcdata = a.decodedData()
             return adcdata 

def justcount_events(appMgr,nevts):

    print '###### Just count events '
    f = TFile('Justcount_run_'+runnumber+'.root', 'recreate')
    n = 0
    n_no_odin = 0
    nbcid  = [0] * 3564
    nbctyp = [0] * 4
    n_missingsample = 0
    odinbcid = TH1F('odin_bcid', 'odin_bcid', 3564, -0.5, 3563.5) 
    while (n<nevts):
          n += 1
          result = appMgr.run(1)
          #print 'Event ',n,' result = ',result
          bcid  =  -1
          if  not evt['/Event'].__nonzero__() : 
              print '###### Broken event ??? or end of files...  Event ',n
              break
          else:
              for s in range(0,len(loc)):
                  adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
                  headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
                  if not(adcs and headers):
                     print '   MISSING ADCS or HEADERS DATA in loc [',s,'] ',loc[s]+'Raw/Velo/... for EVENT '+str(n)+'....!!!'
                     n_missingsample += 1
              odinloc = 'DAQ/ODIN' #odinloc = 'Raw/Velo/EvtInfo'
              odin = evt[odinloc]
              if odin: 
                 bcid  =  odin.bunchId()
                 bctyp =  odin.bunchCrossingType()
                 orbnr =  odin.orbitNumber()
                 evtim = (odin.eventTime()).ns()
                 evtyp =  odin.eventType()
                 nbcid[bcid]  += 1
                 nbctyp[bctyp] += 1
              else: 
                 n_no_odin += 1
              odinbcid.Fill(bcid)

    print 'Looped over ',n,' events'
    print '        No Odin: ', n_no_odin
    print '        Missing sample: ', n_missingsample
    print 'Crossing types:'
    for i in range(4):    print nbctyp[i]
    print 'Counts per BCIDs:'
    for i in range(0,99): print nbcid[0+i*36:36+i*36]

    f.Write()
    f.Close()

    return odinbcid

def bcIDshift(LHCbuckets):
    bcID = []
    for bunch in LHCbuckets:
        bcID.append((bunch-1)/10) # bcid0 = bucket01, bcid1 = bucket11, etc

    return bcID

def countComplete_events(appMgr,nevts, bcids, offset):

    print '###### Count Complete Events (Events containing central and all TAE events) '
    f = TFile('CountComplete_run_'+runnumber+'.root', 'recreate')
    n = 0
    n_no_odin = 0
    nbcid  = [0] * 3564
    nbctyp = [0] * 4
    n_missingsample = 0
    fillbcid = 0
    odinbcid = TH1F('odin_bcid', 'ODIN bcid', 3570, -3.5, 3566.5) 
    LHCbcID =  TH1F('LHC_bcid', 'LHC bcid', 3570, -3.5, 3566.5)
    #combined =  TH1F('combined', 'combined bcid', 3564, -0.5, 3563.5)
    skipevent = []
    combineBcIds = THStack("combineBcIds", "combined BcIds")

    odinbcidShifted = TH1F('odin_bcid_Shifted', 'ODIN bcid shifted to Point 4', 3570, -3.5, 3566.5) 
    combineShifted = THStack("combineShifted", "combined BcIds shifted to Point 4")
    

    while (n<nevts):
          missingsample = False
          n += 1
          result = appMgr.run(1)
          #print 'Event ',n,' result = ',result
          bcid  =  -1
          if  not evt['/Event'].__nonzero__() : 
              print '###### Broken event ??? or end of files...  Event ',n
              break
          else:
              for s in range(0,len(loc)):
                  adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
                  headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
                  if not(adcs and headers):
                     print '   MISSING ADCS or HEADERS DATA in loc [',s,'] ',loc[s]+'Raw/Velo/... for EVENT '+str(n)+'....!!!'
                     n_missingsample += 1
                     missingsample = True
              if missingsample:
                skipevent.append(n)
              if not missingsample: 
                odinloc = 'DAQ/ODIN' #odinloc = 'Raw/Velo/EvtInfo'
                odin = evt[odinloc]
                if odin: 
                   bcid  =  odin.bunchId()
                   bctyp =  odin.bunchCrossingType()
                   orbnr =  odin.orbitNumber()
                   evtim = (odin.eventTime()).ns()
                   evtyp =  odin.eventType()
                   nbcid[bcid]  += 1
                   nbctyp[bctyp] += 1
                else: 
                   n_no_odin += 1
                shiftedBcID = bcid+offset
                if shiftedBcID>3563:
                    shiftedBcID -= 3564

                odinbcid.Fill(bcid)
                odinbcidShifted.Fill(shiftedBcID)
                fillbcid +=1
    a=0
    while a<5000:
      for bunch in bcids:
          LHCbcID.Fill(bunch)
      a+=1
    LHCbcID.SetLineColor(kRed)
    odinbcid.SetLineColor(kBlue)
    odinbcidShifted.SetLineColor(kGreen)
    LHCbcID.GetXaxis().SetTitle("bunch counter ID")
    LHCbcID.GetYaxis().SetTitle("counts")
    odinbcid.GetXaxis().SetTitle("bunch counter ID")
    odinbcid.GetYaxis().SetTitle("counts")
    odinbcidShifted.GetXaxis().SetTitle("ODIN bunch counter ID shifted")
    odinbcidShifted.GetYaxis().SetTitle("counts")

    combineBcIds.Add(odinbcid)
    combineBcIds.Add(LHCbcID)

    combineShifted.Add(odinbcidShifted)
    combineShifted.Add(LHCbcID)


    combined = TCanvas("combined_BCIDs","Combined BCIDs",1)
    combined.SetLogy()
    combineBcIds.Draw()
    combineBcIds.GetXaxis().SetTitle("bunch counter ID")
    combineBcIds.GetYaxis().SetTitle("counts")
    combineBcIds.Write()

    combinedShifted = TCanvas("combined_BCIDs","Combined BCIDs",1)
    combinedShifted.SetLogy()
    combineShifted.Draw()
    combineShifted.GetXaxis().SetTitle("bunch counter ID")
    combineShifted.GetYaxis().SetTitle("counts")
    combineShifted.Write()

    

       

    print 'Looped over ',n,' events'
    print '        No Odin: ', n_no_odin
    print '        Missing sample: ', n_missingsample
    print 'Crossing types:'
    for i in range(4):    print nbctyp[i]
    # print 'Counts per BCIDs:'
    # for i in range(0,99): print nbcid[0+i*36:36+i*36]
    print 'events used to fill bcids: ' + str(fillbcid)
    print 'list of events to be skipped: '+str(skipevent)

    f.Write()
    f.Close()

    return nbcid, skipevent

def l0latencyCheck(appMgr,nevts,tell1numbers,skipevents, peds):
    print '###### Get l0latency Plot #######'
    rewind(appMgr)
    appmgrCounter = 0
    f = TFile('l0LatencyCheck_'+runnumber+'.root', 'recreate')
    n = 0
    n_missingsample = 0
    fillbcid = 0
    odinlatency = {}
    pedsubodinlatency = {}
    for tell1 in tell1numbers:
        # odinlatency[tell1] = 0
        hname = "h_l0Latency%02d"%(tell1)
        htitl = "raw data bgvtell0"+str(tell1)
        odinlatency[tell1] = ( TH2F(hname, htitl, 7, -0.5, 6.5, 500, 261.5, 760.5) )
    for tell1 in tell1numbers:
        # pedsubodinlatency[tell1]= 0
        hname = "h_pedsub_l0Latency%02d"%(tell1)
        htitl = "pedestal subtracted data bgvtell0"+str(tell1)
        pedsubodinlatency[tell1] = ( TH2F(hname, htitl, 7, -0.5, 6.5, 500, -249.5, 249.5) )


    while (n<nevts):
          n += 1
          
          if n%100 == 0:
              print 'Event ',n,' result = ',result
          
            
          if n not in skipevents:
              result = appMgr.run(1)
              appmgrCounter+=1
              #print 'should be at event', appmgrCounter

              if not evt['/Event'].__nonzero__() : 
                  print '###### Broken event ??? or end of files...  Event ',n
                  break
              
              for s in range(0,len(loc)):
                  adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
                  headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
                  for sen in adcs.containedObjects():
                     key = sen.key()
                     #print '              sen key = ', key
                     if key in tell1numbers:
                        pedestals = peds[key]
                        headerbitsfromdata_sample_tell1 = []
                        sdata = sen.decodedData()
                        hdata = get_headerdata_by_key(headers,key)
                        for channel in range(len(sdata)):
                          odinlatency[key].Fill(s, sdata[channel])
                          pedsubodinlatency[key].Fill(s, sdata[channel]-pedestals[channel])
              fillbcid+=1
          else:
            result = appMgr.run(1)
            appmgrCounter+=1
            #print 'should be at event', appmgrCounter
            print 'caught bad event at', n

    print 'Looped over ',n,' events'
    print 'events used to fill l0latency histogram: ' + str(fillbcid)
    print 'list of events skipped: '+str(skipevents)

    f.Write()
    f.Close()

    return odinlatency

def make_raw_histograms(appMgr,nevts,tell1numbers):
    print '###### Make raw histograms per link'
    f = TFile('Make_raw_run_'+runnumber+'.root', 'recreate')
    init = 0
    frawhists = {}
    for key in tell1numbers:
        frawhists[key] = []
        print 'Created frawhists[key=',key,'] list'
    count_Beetpcn_discrepancy = 0
    ncheck = 0
    n = 0
    nbcid  = [0] * 3564
    nbctyp = [0] * 4
    oldevtim = 0
    oldbcid = 0
    oldorbnr = 0
    while (n<nevts):
          n += 1
          skipevent = False
          result = appMgr.run(1)
          #print 'Event ',n,' result = ',result
          if  not evt['/Event'].__nonzero__() : 
              print '###### Broken event ???   Event ',n
              break
              #skipevent = True
          for s in range(0,len(loc)):
              adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
              headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
              if not(adcs and headers):
                 print '   MISSING ADCS or HEADERS DATA in loc [',s,'] ',loc[s]+'Raw/Velo/... !!!'
                 countmissing[s] += 1
                 skipevent = True
          odinloc = 'DAQ/ODIN' #odinloc = 'Raw/Velo/EvtInfo'
          odin = evt[odinloc]
          if odin : 
             bcid  =  odin.bunchId()
             bctyp =  odin.bunchCrossingType()
             orbnr =  odin.orbitNumber()
             evtim = (odin.eventTime()).ns()
             evtyp =  odin.eventType()
             nbcid[bcid]  += 1
             nbctyp[bctyp] += 1
             if evtim<oldevtim:
                #print 'WHAT THE HELL ? evtim = ',evtim,' < oldevtim = ',oldevtim
                #print '   ODIN OLD  bcid / orbnr / evtim :',oldbcid,oldorbnr,oldevtim
                #print '   ODIN THIS bcid / orbnr / evtim :',bcid,orbnr,evtim
                 told = ((oldevtim-1451606400)*1000-(oldorbnr*3564+oldbcid)*24950)/1000
                 tnew = ((evtim   -1451606400)*1000-(orbnr   *3564+bcid   )*24950)/1000
                #print '   ODIN OLD  (evtim-1451606400) - (orbnr*3564+bcid)*24.95 :',told 
                #print '   ODIN THIS (evtim-1451606400) - (orbnr*3564+bcid)*24.95 :',tnew 
                #print '                  difference OLD-NEW    :',told-tnew 
           # else: 
           #     print '                 '
             oldevtim = evtim
             oldbcid  = bcid
             oldorbnr = orbnr
          else:
             print 'No ODIN data in ',odinloc
          if not(skipevent): 
             #print 'Event ',n,'  bcid ',bcid,'  orbit number ',orbnr
             ncheck += 1
             headerbitsfromdata_allsamples = []
             for s in range(0,len(loc)):
                 adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
                 headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
                 evtinfo = evt[loc[s]+'Raw/Velo/EvtInfo']
                 #odin = evt[loc[s]+'DAQ/ODIN']
                 #if   odin:  print 'Sample ',s,' has ODIN bank'
                 #else     :  print 'Sample ',s,' has   NO  ODIN bank'
                 #print '   Sample loc[',s,'] ',loc[s]
                 #print '          adcs.size = ', adcs.size(), '  headers.size = ', headers.size() 
                 headerbitsfromdata_sample = []
                 for sen in adcs.containedObjects():
                     key = sen.key()
                     #print '              sen key = ', key
                     if key in tell1numbers:
                        headerbitsfromdata_sample_tell1 = []
                        sdata = sen.decodedData()
                        hdata = get_headerdata_by_key(headers,key)
                        #print '   key ',key,'       sdata.size = ',sdata.size()
                        #print '   key ',key,'       hdata.size = ',hdata.size()
                        if init == 0 :
                           for l in range(64):
                               hname = "h_raw_source%03d"%(key)+"_link%03d"%(l)+"_"+(loc[s].replace('/',''))
                               htitl = "raw data source "+str(key)+" link "+str(l)+"  "+(loc[s].replace('/',''))
                               frawhists[key].append( TH2F(hname, htitl, 36, -4.5, 31.5, 200, 412.5,611.5) )
                               print 'At index ',len(frawhists[key])-1,'   created histogram ',hname

                           init = 1 
                           for ki in tell1numbers: 
                               if len(frawhists[ki]) < (64*len(loc)): init = 0 
                           if init == 1: print 'Stop creating histograms'
                        for l in range(64): 
                              ll = 64*s+l
                              for k in range(32): 
                                  frawhists[key][ll].Fill(k,sdata[l*32+k])
                              for k in range( 4): 
                                  frawhists[key][ll].Fill(k-4,hdata[l*4+k])
                        #####################################################
                        """
                        #print 'TELL1 key ',key
                        bc_0,l0id_0,fempcn_0 = check_velo_pcn_event_info(evtinfo)
                          
                        # Get the header bits from ADC header data:
                        for b in range(16):      # b = beetle index, 0 to 15
                              headbits = [0]*16  # to store bits of one full beetle  (4x4 bits = 16 bits)
                              for p in range(4): # port p = 0 to 3
                                  l = b * 4 + p  # link l = b * 4 + p, 0 to 63
                                  for k in range(4): headbits[k+4*p] = int(hdata[l*4+k] < 512) # header bit k=0,1,2,3 in port p 
                              # finished one beetle
                              beetpcn,Beetpcn,R_beetpcn,R_Beetpcn = get_pcn_from_beetle_ports(headbits)
                              if (n%200==0) and (b==1 or b==8): 
                                 if s == len(loc)/2:
                                    print 'Evt ',n,' Sampl ',s,' Key ',key,' Bee ',b,' : ',headbits,' BCID ',bcid,bcid%187,' Orb ',\
                                          orbnr,(orbnr*3546+bcid)%187,' BeePCN ',Beetpcn,' TL1 (bc,l0,fempcn):',bc_0,l0id_0,fempcn_0
                                 else              :
                                    print 'Evt ',n,' Sampl ',s,' Key ',key,' Bee ',b,' : ',headbits,' BCID ','    ','    ',' Orb ',\
                                          '    ','    ',' BeePCN ',Beetpcn,' TL1 (bc,l0,fempcn):',bc_0,l0id_0,fempcn_0
                                #print  beetpcn,' --> ',Beetpcn,' <-- ',R_beetpcn,R_Beetpcn,255-beetpcn,255-Beetpcn,255-R_beetpcn,255-R_Beetpcn 
                              headerbitsfromdata_sample_tell1.append(headbits)

                        headerbitsfromdata_sample.append(headerbitsfromdata_sample_tell1)

                 headerbitsfromdata_allsamples.append(headerbitsfromdata_sample)

             # check consistency of header bits and odin bcid:
             for s in range(0,len(headerbitsfromdata_allsamples)):
                 port_firstbit = [1,0,1,0]
                 port_seconbit = [1,0,1,0]
                 current_Beetpcn = -1
                 Beetpcn_discrepancy = False
                 hbits_sample = headerbitsfromdata_allsamples[s]
                 for t in range(0,len(hbits_sample)):
                       hbits_sample_tell1 = hbits_sample[t]
                       for b in range(0,len(hbits_sample_tell1)): 
                           bee = hbits_sample_tell1[b]
                          #for port in range(4): 
                          #    if bee[4*port]!=port_firstbit[port]: print 'port ',port,' first bit changes --------------------'
                           Beetpcn = Get_pcn_from_beetle_ports(bee)
                           if current_Beetpcn == -1: current_Beetpcn = Beetpcn
                           if Beetpcn != current_Beetpcn: Beetpcn_discrepancy = True
                 if Beetpcn_discrepancy:
                    count_Beetpcn_discrepancy += 1
                    #print 'Beetpcn_discrepancy:  Event ',n,'  Sample ',s,'  BCID : ',bcid
                    #print hbits_sample

    print 'make_raw_histograms: got data over ',ncheck,' events out of ',n
    for s in range(0,len(loc)):
        print '                     found ',countmissing[s],' events with missing data in',loc[s]+'Raw/Velo/... '
    for i in range(0,4): print 'nbctyp[',i,'] = ',nbctyp[i]
    print 'Found ',count_Beetpcn_discrepancy,' count_Beetpcn_discrepancy'
    """

    f.Write()
    f.Close()

    return frawhists


def check_velo_pcn_event_info(tell1evtinfo):
    pcn_0    = tell1evtinfo.PCNBeetle(0)
    bc_0     = tell1evtinfo.bunchCounter(0)
    l0id_0   = tell1evtinfo.l0EventID(0)
    fempcn_0 = tell1evtinfo.FEMPCNG(0)
    st = ['','','','']
    unmatched = False
    st[0] = 'ERROR: PP %4i'%(0)+' : bc %4i'%bc_0+'  l0id %4i'%l0id_0+'  fempcn %4i'%fempcn_0+' beepcns '
    for b in range(4): st[0] += ' %4i'%pcn_0[b]
    for pp in range(1,4):
        pcn    = tell1evtinfo.PCNBeetle(pp)
        bc     = tell1evtinfo.bunchCounter(pp)
        l0id   = tell1evtinfo.l0EventID(pp)
        fempcn = tell1evtinfo.FEMPCNG(pp) 
        st[pp] = 'ERROR: PP %4i'%pp+' : bc %4i'%bc+'  l0id %4i'%l0id+'  fempcn %4i'%fempcn+' beepcns '
        if (bc != bc_0 or l0id != l0id_0 or fempcn != fempcn_0): unmatched = True
        for b in range(4): 
           st[pp] += ' %4i'%pcn[b]
           if (pcn[b] != pcn_0[b]): unmatched = True
    if unmatched :
        for pp in range(4): print st[pp] 

    return bc_0,l0id_0,fempcn_0

def get_pcn_from_beetle_ports(bee):
    # 12-15 = port 0, 8-11 = port 1, 4-7 = port 2, 0-3 = port 3      but without reversing header bits
    pcn = [bee[2],bee[3],bee[6],bee[7],bee[10],bee[11],bee[14],bee[15]] # MSB on the left  = pcn[0], LSB on the right = pcn[7]
    oth = [bee[0],bee[1],bee[4],bee[5],bee[8] ,bee[9] ,bee[12],bee[13]]
    # 12-15 = port 0, 8-11 = port 1, 4-7 = port 2, 0-3 = port 3      and reversing header bits pairwise
    R_pcn = ([bee[3],bee[2],bee[7],bee[6],bee[11],bee[10],bee[15],bee[14]])
    R_oth = ([bee[1],bee[0],bee[5],bee[4],bee[9],bee[8],bee[13],bee[12]])
    # 12-15 = port 3, 8-11 = port 2, 4-7 = port 1, 0-3 = port 0      but without reversing header bits
    Pcn = ([bee[14],bee[15],bee[10],bee[11],bee[6],bee[7],bee[2],bee[3]])
    Oth = ([bee[12],bee[13],bee[8],bee[9],bee[4],bee[5],bee[0],bee[1]])
    # 12-15 = port 3, 8-11 = port 2, 4-7 = port 1, 0-3 = port 0      and reversing header bits pairwise
    R_Pcn = [bee[15],bee[14],bee[11],bee[10],bee[7],bee[6],bee[3],bee[2]] # MSB on the left  = Pcn[0], LSB on the right = Pcn[7]
    R_Oth = [bee[13],bee[12],bee[9] ,bee[8] ,bee[5],bee[4],bee[1],bee[0]]
    bits,beetpcn   = binary2decimal(pcn)
    bits,Beetpcn   = binary2decimal(Pcn)   # SEEMS TO BE THE CORRECT ONE ???
    bits,R_beetpcn = binary2decimal(R_pcn)
    bits,R_Beetpcn = binary2decimal(R_Pcn) # OR THIS ONE ???
    return beetpcn,Beetpcn,R_beetpcn,R_Beetpcn

def Get_pcn_from_beetle_ports(bee):
    # 12-15 = port 3, 8-11 = port 2, 4-7 = port 1, 0-3 = port 0      but without reversing header bits
    Pcn = ([bee[14],bee[15],bee[10],bee[11],bee[6],bee[7],bee[2],bee[3]])
    Oth = ([bee[12],bee[13],bee[8],bee[9],bee[4],bee[5],bee[0],bee[1]])
    bits,Beetpcn   = binary2decimal(Pcn)   # SEEMS TO BE THE CORRECT ONE ???
    return Beetpcn

def binary2decimal(pcn):
    dec = 0
    bit = 0
    for m in range(0,8): dec += (2**(7-m)) * pcn[m]
    for m in range(0,8): bit += (10**(7-m)) * pcn[m]
    return bit,dec

def pulseShapeHistograms(appMgr,nevtsperstep,nsteps,tell1numbers,wanted_bcid_list,peds,channeldatacut,skipevents):
  print '###### Make pulse shape histograms ##########'
  rewind(appMgr)
  appmgrCounter = 0
  f = TFile('PulseShape_run_'+runnumber+'.root', 'recreate')
  channellist = [4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]
  #channellist = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
  linklist = range(64)
  #linklist = range(64)
  pulshists = {}
  completepulsehists = {}
  averagepulshists = {}
  # stephists = {}
  print tell1numbers
  for key in tell1numbers:
      pulshists[key] = []
      completepulsehists[key] = {}
      averagepulshists[key] = {}
  #    stephists[key] = []
      print 'Created pulshists[key=',key,'] list'
      for ll in range(0,len(linklist)):
          l = linklist[ll]
          print key, l
          hname = "h_PSscan_source%03d"%(key)+"_link%03d"%(l)
          htitl = "PulseShapeScan source "+str(key)+" link "+str(l)
          nxbi = (nsteps)*len(loc)
          xmax = (nsteps)*(0.5*len(loc))
          xmin = -xmax
          pulshists[key].append( TH2F(hname, htitl, nxbi, xmin,xmax, 150, 372.5,671.5) )
          print 'At index ',len(pulshists[key])-1,'   created histogram ',hname,nxbi,xmin,xmax,150, 372.5,671.5

          completepulsehists[key][l] = {}
          averagepulshists[key][l] = []
          for timeslot in range(nxbi):
            completepulsehists[key][l][xmin+timeslot] = []

      #     for st in range(nsteps):
      #         hname = "h_PSscan_source%03d"%(key)+"_link%03d"%(l)+"_step%02d"%(st)
      #         htitl = "PulseShapeScan source "+str(key)+" link "+str(l)+" step "+str(st)
      #         stephists[key].append( TH2F(hname, htitl, nxbi, xmin,xmax, 150, 372.5,671.5) )
      print 'Stop creating histograms'
  ncheck = 0
  n = 0
  skipped = 0
  step = 0
  #print 'Event ',n,'   step ',step
  n_badpcn = 0
  not_wanted_bcid = 0
  while True:
        n += 1  # start counting events at 1
        if n>1 and n%nevtsperstep == 1: 
           print 'Event ',n,'   got ',nevtsperstep,' events in step ',step,' out of ',nsteps
           step   += 1
           print '      => step changed to ',step
        if n not in skipevents:
              result = appMgr.run(1)
              appmgrCounter+=1

              skipevent = False
              #print 'Event ',n,' result = ',result
              if  not evt['/Event'].__nonzero__() : 
                  print '###### Broken event ???   Event ',n
                  break
                  #skipevent = True
              if  n > nevtsperstep*nsteps: 
                  break
              adcs    = []
              headers = []
              evtinfo = []
              xx = []
              for s in range(0,len(loc)):
                  a = evt[loc[s]+'Raw/Velo/DecodedADC']    # e.g. evt['Prev2/Raw/Velo/DecodedADC'][1] is 'previous2' data of bgvtell01 but evt['Prev2/Raw/Velo/DecodedADC'] is defined
                  h = evt[loc[s]+'Raw/Velo/DecodedHeaders'] 
                  e = evt[loc[s]+'Raw/Velo/EvtInfo']
                  xx.append( (step+(s-0.5*len(loc))*nsteps) )
                  
                  if (not(a) or not(h)):
                     print '   MISSING ADCS or HEADERS DATA in loc [',s,'] ',loc[s]+'Raw/Velo/... !!!'
                     countmissing[s] += 1
                     skipevent = True
                  else:
                     adcs.append(    a ) 
                     headers.append( h )
                     evtinfo.append( e )
              odinloc = 'DAQ/ODIN' #odinloc = 'Raw/Velo/EvtInfo'
              odin = evt[odinloc]
              if odin : 
                 bcid  =  odin.bunchId()
                 bctyp =  odin.bunchCrossingType()
                 orbnr =  odin.orbitNumber()
                 evtim = (odin.eventTime()).ns()
                 evtyp =  odin.eventType()
                 # if not (bcid in wanted_bcid_list): 
                 #    skipevent = True
                 #    not_wanted_bcid += 1
              if not(skipevent): 
                 ncheck += 1
                #TAEfirstPCN = 0
                 for key in tell1numbers:
                     pedestals = peds[key]
                     link_adcs = []
                     link_head = []
                     # get all samples of a given link:
                     for s in range(0,len(loc)):
                         link_adcs.append( get_adcdata_by_key(adcs[s],key) ) # basically get decoded data for e.g. evt['Prev2/Raw/Velo/DecodedADC'][1]
                         link_head.append( get_headerdata_by_key(headers[s],key) )

                     for ll in range(0,len(linklist)):
                         l = linklist[ll]
                         for k in channellist: 
                             channeldata = [0.0] * len(loc)
                             for s in range(0,len(loc)): 
                                 channeldata[s] = abs(link_adcs[s][l*32+k] - pedestals[l*32+k])
                             if sum(channeldata)>channeldatacut:
                                for s in range(0,len(loc)): 
                                    pulshists[key][ll].Fill(xx[s],link_adcs[s][l*32+k])
                                    timeslot = xx[s]
                                    if timeslot > -50 and timeslot < -20:                                     # we see some strange entries in the area between -50 and -20 ns that would badly impact the average value for the pulsshape. 
                                        if link_adcs[s][l*32+k] < 515:                                        # these "positive" values greater 515 need to be disregarded. 
                                            completepulsehists[key][l][timeslot].append(link_adcs[s][l*32+k]) 
                                    else: completepulsehists[key][l][timeslot].append(link_adcs[s][l*32+k])   
        #                               stephists[key][ll*nsteps+step].Fill(xx[s],link_adcs[s][l*32+k])
                          # # Get the header bits from ADC header data:
                          # for b in range(16):      # b = beetle index, 0 to 15
                          #       headbits = [0]*16  # to store bits of one full beetle  (4x4 bits = 16 bits)
                          #       for p in range(4): # port p = 0 to 3
                          #           l = b * 4 + p  # link l = b * 4 + p, 0 to 63
                          #          #pedestal = sum(pedestals[l*32:(l+1)*32])/32.0
                          #          #for k in range(4): headbits[k+4*p] = int(hdata[l*4+k] < pedestal) # header bit k=0,1,2,3 in port p 
                          #           for k in range(4): headbits[k+4*p] = int(hdata[l*4+k] < 512) # header bit k=0,1,2,3 in port p 
                          #       Beetpcn = Get_pcn_from_beetle_ports(headbits)
                          #       tell1_beepcns.append(Beetpcn)
                          #       if TAEfirstPCN == 0: 
                          #          TAEfirstPCN = Beetpcn
                          #       else: 
                          #          if Beetpcn != (TAEfirstPCN+s) : badpcn = True # at least one inconsistent PCN in the TAE Event

              else:
                     skipped += 1
        
        else:
            result = appMgr.run(1)
            appmgrCounter+=1
            #print 'should be at event', appmgrCounter
            print 'caught bad event at', n


  print 'pulseshape_histograms: got data over ',ncheck,' events out of ',n-1
  for s in range(0,len(loc)):
      print '                     found ',countmissing[s],' events with missing data in',loc[s]+'Raw/Velo/... '
  print 'Got in total ',n_badpcn,' bad PCN events (at least one inconsistent PCN in the TAE Event)'
  print 'Got in total ',not_wanted_bcid,' TAEs with an unwanted BCID from ODIN'

  for timeslot in sorted(completepulsehists[1][40].keys()):
     for key in tell1numbers:
       for ll in range(0,len(linklist)):
         l = linklist[ll]
         averagepulshists[key][l].append(np.average(completepulsehists[key][l][timeslot]))



  f.Write()
  f.Close()
  #---------------------
  # save results to pickle for this run
  #---------------------

  pkl = pkldir+'Run_'+str(runnumber)+'_averagePulseshapePerLink.pkl.gz'
  print "- Saving data to file",pkl

  pkl_file = gzip.open(pkl, 'wb') # save as compressed gzip files directly
  if not pkl_file:
      print "ERROR: could not open pickle file",pkl
      sys.exit()

  pickle.dump(averagepulshists, pkl_file, pickle.HIGHEST_PROTOCOL)
  pkl_file.close()

  print 'done'

def view_single_event(appMgr,source,beetle,skipsomanyevents,peds):
    print '#### View single event'
    appMgr.run(skipsomanyevents)
    appMgr.run(1)
    odinloc = 'DAQ/ODIN' #odinloc = 'Raw/Velo/EvtInfo'
    odin = evt[odinloc]
    if odin : 
       bcid  =  odin.bunchId()
       bctyp =  odin.bunchCrossingType()
       orbnr =  odin.orbitNumber()
       evtim = (odin.eventTime()).ns()
       evtyp =  odin.eventType()
       print 'ODIN bcid = ', bcid,' orbnr = ',orbnr,' evtim = ',evtim,' evtyp = ',evtyp

    fig = plt.figure(figsize=(10,10))
    ax = []
 
    TAEfirstPCN = 0
    hea = np.linspace(0,7,8,dtype=np.int)
    hea = ((hea/2)*34 + hea%2)
    cha = np.linspace(0,127,128,dtype=np.int)
    cha = 2+((cha/32)*34 + cha%32)
    for s in range(0,len(loc)):
        ax.append(fig.add_subplot(len(loc),1,s+1))
        adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
        headers = evt[loc[s]+'Raw/Velo/DecodedHeaders']
        evtinfo = evt[loc[s]+'Raw/Velo/EvtInfo']
        print 'Sample loc[',s,'] ',loc[s]
        print '       adcs.size = ', adcs.size(), '  headers.size = ', headers.size() 
        for sen in adcs.containedObjects():
            key = sen.key()
            if key == source:
               bc_0,l0id_0,fempcn_0 = check_velo_pcn_event_info(evtinfo[key])
               print '              sen key = ', key
               print '              TELL1 BC = ',bc_0,' L0ID = ',l0id_0,' fempcn_0 = ',fempcn_0
               sdata = sen.decodedData()
               hdata = get_headerdata_by_key(headers,key)
               pedestals = peds[key]
               print '                     sdata.size = ',sdata.size()
               print '                     hdata.size = ',hdata.size()
               # Get the header bits from ADC header data:
               b  = beetle        # b = beetle index, 0 to 15
               dataadcs = [0]*128 # to store ADCs of one full beetle  
               dh       = [0]*16  # to store ADCs of header in one full beetle  
               headbits = [0]*16  # to store bits of one full beetle  (4x4 bits = 16 bits)
               pede     = pedestals[b*128:(b+1)*128]
               for p in range(4): # port p = 0 to 3
                   l = b * 4 + p  # link l = b * 4 + p, 0 to 63
                   pedepede   = pedestals[l*32:(l+1)*32]
                   avpedestal = sum(pedepede)/32.0
                   print 'Using avg pedestal ',avpedestal
                   for k in range(4):  dh      [k+4*p]  = hdata[l*4+k]            # header data k=0,1,2,3 in port p 
                   for k in range(4):  headbits[k+4*p]  = int(hdata[l*4+k] < avpedestal) # header bit k=0,1,2,3 in port p 
                  #for k in range(4):  headbits[k+4*p]  = int(hdata[l*4+k] < 512) # header bit k=0,1,2,3 in port p 
                   for k in range(32): 
                       dataadcs[k+32*p] = sdata[l*32+k]           # data k=0,...31       in port p 
               Beetpcn = Get_pcn_from_beetle_ports(headbits)
               print 'Bee ',b,' PCN ',Beetpcn
               if TAEfirstPCN == 0: 
                  TAEfirstPCN = Beetpcn
                  print 'First PCN: Bee ',b,' PCN ',TAEfirstPCN
               else: 
                  if Beetpcn != (TAEfirstPCN+s) : 
                     print 'bad PCN ',Beetpcn,' event (PCN in the TAE Event) Bee ',b,' TAEfirstPCN =',TAEfirstPCN
 
        ax[s].plot(cha,dataadcs,'ko')
        ax[s].plot(hea,[dh[14],dh[15],dh[10],dh[11],dh[6],dh[7],dh[2],dh[3]],'rs') 
        ax[s].plot(cha,pede,'.') 
        #drawhist(ax[s],hea,datahead)
        #drawhist(ax[s],cha,dataadcs)
    fig.savefig('single_event_L0id%i'%l0id_0+'_source%i'%source+'_beetle%i'%beetle+'.pdf', bbox_inches='tight')

def get_peds(appMgr,nforpeds,tell1numbers,initpeds,outliercut,skipevents,iteration):
    print '###### Make pedestals '
    peds = {}
    cnts = {}
    for key in tell1numbers: 
        peds[key] = [0.0]*2048
        cnts[key] = [1.0]*2048
    n = 0
    while n <= nforpeds:
      if iteration*nforpeds+iteration+n+1 in skipevents: 
        print (iteration*nforpeds+iteration+n+1), 'is bad event'
        result = appMgr.run(1)
        adcs    = evt['Raw/Velo/DecodedADC']
        for sen in adcs.containedObjects():
            key = sen.key()
            if key in tell1numbers:
               sdata = sen.decodedData()
               for ch in range(2048): 
                   if abs(initpeds[key][ch]-sdata[ch])<outliercut:
                      peds[key][ch] += sdata[ch] 
                      cnts[key][ch] += 1.0
        n+=1
      else:
          result = appMgr.run(1)
          if  not evt['/Event'].__nonzero__() : 
              print '###### Broken event ???   Event ',n
              break
          for s in range(0,len(loc)):
              adcs    = evt[loc[s]+'Raw/Velo/DecodedADC']
              for sen in adcs.containedObjects():
                  key = sen.key()
                  if key in tell1numbers:
                     sdata = sen.decodedData()
                     for ch in range(2048): 
                         if abs(initpeds[key][ch]-sdata[ch])<outliercut:
                            peds[key][ch] += sdata[ch] 
                            cnts[key][ch] += 1.0
          n += 1  # start counting events at 1
          print 'Ped event ',n
      

    for key in tell1numbers: 
        for ch in range(2048): 
            peds[key][ch] = peds[key][ch] / cnts[key][ch]

    return peds

def save_obj(obj, name ):
    #with open('obj/'+ name + '.pkl', 'wb') as f:
    with open('/afs/cern.ch/user/m/mrihl/BGVAnalysis/'+ name + '.pkl', 'wb') as f:
        pickle.dump(obj, f, pickle.HIGHEST_PROTOCOL)

def load_obj(name ):
    #with open('obj/' + name + '.pkl', 'rb') as f:
    with open('/afs/cern.ch/user/m/mrihl/BGVAnalysis/'+ name + '.pkl', 'rb') as f:
        return pickle.load(f)

def rewind(appMgr):
    algs = appMgr.algorithms()
    for i in algs:
        appMgr.algorithm(i).Enable = False
    appMgr.evtsel().rewind()
    for i in algs:
        appMgr.algorithm(i).Enable = True

def plot_BCIDs(odinbcid, b1bcidoffset, b2bcidoffset, LHCbucketsB1, LHCbucketsB2, runnumber):
    b1shifted = []
    b2shifted = []

    b1shifted = np.roll(odinbcid, b1bcidoffset)
    for i in range(len(b1shifted)): # to make plot more orderly and get rid of noise/ghost charges
        if b1shifted[i]<=1:
            b1shifted[i] = 0
        if runnumber == '1588':
            if b1shifted[i]>=110:
                b1shifted[i] = 0
        elif b1shifted[i]>=50:
            b1shifted[i] = 0
    b2shifted = np.roll(odinbcid, b2bcidoffset)
    for i in range(len(b2shifted)): # to make plot more orderly and get rid of noise/ghost charges
        if b2shifted[i]<=1:
            b2shifted[i] = 0

    fig = plt.figure(figsize=(16,7.5), facecolor = 'white')
    fig.subplots_adjust(wspace=0, hspace=0, right=0.95)
    plt.subplots_adjust(hspace = 0.01)
    ax = fig.add_subplot(111)
    ax.xaxis.set_ticklabels([])
    ax.yaxis.set_ticklabels([])
    ax.set_title('Shifted BCIDs for run '+str(runnumber), fontsize = 28)
    ax1 = fig.add_subplot(211)
    ax2 = fig.add_subplot(212)
    ax1.set_xlim(-10,3570)
    ax1.set_yscale('log')
    ax1.set_ylim(1,300)
    ax1.set_ylabel('beam 1 counts', fontsize = 12)
    ax1.xaxis.set_ticklabels([])


    ax2.set_xlabel('LHC bunch slots', fontsize = 14)
    ax2.set_ylabel('beam 2 counts', fontsize = 12)
    ax2.set_ylim(1,80000)
    ax2.set_yscale('log')
    ax2.set_xlim(-10,3570)

    LHCb1 = []
    LHCb2 = []
    
    for i in range(len(LHCbucketsB1)):
        LHCb1.append((LHCbucketsB1[i]-1)/10)
        ax1.axvline(x=LHCb1[i],ymin=0.5,ymax=1,color="grey",linestyle='-',linewidth=0.8)
    for i in range(len(LHCbucketsB2)):
        LHCb2.append((LHCbucketsB2[i]-1)/10)
        if runnumber == '1932':
            ax2.axvline(x=LHCb2[i],ymin=0.4,ymax=1,color="grey",linestyle='-',linewidth=0.8)
        else: 
            ax2.axvline(x=LHCb2[i],ymin=0.7,ymax=1,color="grey",linestyle='-',linewidth=0.8)

    print 'length of odinbcid: ', len(odinbcid)
    print 'plotting shifted bcids against filled buckets for beam1 and beam2. This might take a while!'

    ax1.bar(left=range(len(odinbcid)), height = b1shifted, width = 0.2,color="blue", edgecolor = "blue")
    ax2.bar(left=range(len(odinbcid)), height = b2shifted, width = 0.4,color="red", edgecolor = "red")

    
    fig.savefig('BCIDs_Run_'+str(runnumber)+'.pdf',bbox_inches='tight')
    


############################ main: ############################################################

pkldir = '/afs/cern.ch/user/m/mrihl/BGVAnalysis/'
fname = pkldir+'peds_'+runnumber+'_v1'
skipevts = 0
if skipevts > 0:
    print '###### Skip ', skipevts, ' events'
    appMgr.run(skipevts)

#frawhists = make_raw_histograms(appMgr,nevts,[1])
bcids = bcIDshift(LHCbucketsB2)
odinbcid, skipevents=countComplete_events(appMgr,nevts, bcids, b2bcidoffset)
plot_BCIDs(odinbcid, b1bcidoffset, b2bcidoffset, LHCbucketsB1, LHCbucketsB2, runnumber)


bgvtell1numbers=[1,2,4,5,6,7,8,9] # 2015: nr 9 is not receiving data from FE
#bgvtell1numbers=[1]  
tell1numbers = [1]
#frawhists = make_raw_histograms(appMgr,nevts,[1,2,4,5,6,7,8,9])
#frawhists = make_raw_histograms(appMgr,nevts,bgvtell1numbers,False)

nevtsperstep = 100 #1000
nsteps = 25
print ' - read from pickle file',fname,'..............'
try:
  peds = load_obj('peds_'+runnumber+'_v1')
  print '.................SUCCESS! Loaded pedestal file '+ fname+'\n'
  appMgr.run(nevtsperstep)
except:
  print "...................couldn't find pedestal file, creating it now! \n"
  rewind(appMgr)
  # do_peds = True #needs to be set True for a new run! -> check Colin's try function, that could prevent running this every time
  # if do_peds:
  outliercut = 5.0
  peds = {}
  niter = 1+2*TAE #  e.g. 5 for TAE = 2
  nforpeds = nevtsperstep/niter
  for key in bgvtell1numbers: 
      peds[key] = [512.0]*2048
      print 'peds[',key,'][0:5] = ',peds[key][0:5],' ...'
  for i in range(niter):
      peds = get_peds(appMgr,nforpeds,bgvtell1numbers,peds,(niter-i)*outliercut, skipevents,i)
      for key in bgvtell1numbers: print 'peds[',key,'][0:5] = ',peds[key][0:5],' ...'
  pedsname = 'peds_'+runnumber+'_v1'
  save_obj(peds,pedsname)
  print 'saved pedestal file with name '+str(pedsname)
  # else:
  #    peds = load_obj('peds_'+runnumber+'_v1')
  #    appMgr.run(nevtsperstep) # skip first step!
  # ---->for key in bgvtell1numbers: 
  # ---->    print 'peds[',key,'][0:5] = ',peds[key][0:5],' ...'
#latency = l0latencyCheck(appMgr,nevts,bgvtell1numbers,skipevents, peds)
channeldatacut = 50
pulshists = pulseShapeHistograms(appMgr,nevtsperstep,nsteps,bgvtell1numbers,bcidlist,peds,channeldatacut,skipevents)

##################### end pulseShape Histograms #########################


sys.exit()
channeldatacut = 50
pulshists = pulseShapeHistograms(appMgr,nevtsperstep,nsteps,bgvtell1numbers,bcidlist,peds,channeldatacut)

#sum_h4pos     = {}
#sum_h4neg     = {}
#nor_h4pos     = {}
#nor_h4neg     = {}

#                    sum_h4pos[key] = [0.0]*2048
#                    sum_h4neg[key] = [0.0]*2048
#                    nor_h4pos[key] = [0.0]*2048
#                    nor_h4neg[key] = [0.0]*2048
#print '###### Normalize and plot correlation check vectors'
#sizex = 40
#sizey = 40
#fig  = plt.figure(figsize=(sizex,sizey))
#fig.subplots_adjust(left=0.2, right=0.8, top=0.8, bottom=0.2)
#cha = np.linspace(0,2047,2048)
#n = 0
#for key in sum_h4pos:
#    h4pos = [(x/float(y+1e-30)) for x,y in zip(sum_h4pos[key],nor_h4pos[key])]
#    h4neg = [(x/float(y+1e-30)) for x,y in zip(sum_h4neg[key],nor_h4neg[key])]
#    h4dif = [(x-y) for x,y in zip(h4pos,h4neg)]
#    ax = fig.add_subplot(2,4,n+1)
#    ax.set_title('Source '+str(key))
#    ax.set_xlabel('channel')
#    ax.set_ylabel('pedsub mean for h4>512, h4<512 and diff')
#    ax.plot(cha,h4pos,'k.')
#    ax.plot(cha,h4neg,'r.')
#    ax.plot(cha,h4dif,'g.')
#    ax.set_xlim(-1.0,2048.0)
#    ax.set_ylim(-10.0,10.0)
#    n += 1
#name='headcrosscheck.pdf'
#fig.savefig(name, bbox_inches='tight')

